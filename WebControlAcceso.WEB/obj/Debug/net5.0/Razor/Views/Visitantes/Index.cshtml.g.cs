#pragma checksum "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "139eb95e6a0f32838a2a06de38546311793263db"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Visitantes_Index), @"mvc.1.0.view", @"/Views/Visitantes/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\_ViewImports.cshtml"
using SmartAdmin.WebUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\_ViewImports.cshtml"
using SmartAdmin.WebUI.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\_ViewImports.cshtml"
using SmartAdmin.WebUI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"139eb95e6a0f32838a2a06de38546311793263db", @"/Views/Visitantes/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bbf8d93ca39b33fa2d7f296f66d537b4d3ad0aa1", @"/Views/_ViewImports.cshtml")]
    public class Views_Visitantes_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<WebControlAcceso.MODELS.Dtos.VisitanteDto>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("screen, print"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/notifications/toastr/toastr.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/notifications/sweetalert2/sweetalert2.bundle.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/datagrid/datatables/datatables.bundle.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/theme-demo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/formplugins/bootstrap-datepicker/bootstrap-datepicker.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/fa-regular.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Asignacion/Asignacion.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/fa-solid.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/fa-brands.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/formplugins/select2/select2.bundle.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/base64.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/SigCaptX-Globals.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/SigCaptX-SessionControl.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/SigCaptX-Utils.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/SigCaptX-Wizard-Main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/SigCaptX-Wizard-PadDefs.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/wgssSigCaptX.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/jquery-3.2.1.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Wacom/jquery-ui.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("infoCardVis"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "CC", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "CE", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "PASAPORTE", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "PROVEEDOR", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "VISITANTE", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "CONTRATISTA", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "EMPLEADO", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_29 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Dentro", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_30 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Fuera", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_31 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "MASCULINO", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_32 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "FEMENINO", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_33 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("addVisitorForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_34 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("needs-validation"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_35 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_36 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_Compose", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_37 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formDevices"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_38 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formArl"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_39 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formVehicle"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_40 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formIncidents"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_41 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/datagrid/datatables/datatables.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_42 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/notifications/toastr/toastr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_43 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/formplugins/bootstrap-datepicker/bootstrap-datepicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_44 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/notifications/sweetalert2/sweetalert2.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_45 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/formplugins/select2/select2.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["PageName"] = "Visitantes_index";

#line default
#line hidden
#nullable disable
            DefineSection("HeadBlock", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db20611", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db21878", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db23145", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db24412", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db25679", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db26946", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db28213", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db29480", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db30747", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "139eb95e6a0f32838a2a06de38546311793263db32015", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db33283", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db34384", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db35485", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db36586", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db37687", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db38788", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db39889", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db40990", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db42091", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.min.js""></script>
    <style>

        .dot {
            height: 15px;
            width: 15px;
            background-color: #bbb;
            border-radius: 50%;
            display: inline-block;
            background: #ff0000;
        }

        .doe {
            height: 15px;
            width: 15px;
            background-color: #bbb;
            border-radius: 50%;
            display: inline-block;
            background: #008000;
        }

        .button {
            background-color: #136926;
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 12px;
        }

        #clock {
            background-color: #333;
            font-family: sa");
                WriteLiteral(@"ns-serif;
            font-size: 30px;
            text-shadow: 0px 0px 1px #fff;
            color: #fff;
        }

            #clock span {
                color: #888;
                text-shadow: 0px 0px 1px #333;
                font-size: 20px;
                position: relative;
            }

        #date {
            letter-spacing: 10px;
            font-size: 14px;
            font-family: arial,sans-serif;
            color: #fff;
            background-color: #333;
        }

        html, body {
            height: 100%;
            background-color: #000;
        }

        .contenedor {
            height: 49%;
            background-color: #6A737C;
            margin: 1% 1%;
        }
    </style>
");
            }
            );
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-xl-12"">
        <div id=""panel-1"" class=""panel"">
            <div class=""panel-container show"">
                <div class=""col-md-12"" style=""margin-top: 10px;"">
                    <div class=""row"" style=""text-align: center;"">
                        <div class=""col-xl-3"" style="" width: 180px;"">
                            <div class=""p-3 bg-fusion-300 rounded overflow-hidden position-relative text-white mb-g"" data-toggle=""modal"" data-target=""#infoEnterCont"">
                                <div class=""fc-center"">
                                    <h3 id=""countContratist"" style=""text-align:center"" class=""display-4 d-block l-h-n m-0 fw-500"">
                                        0
                                    </h3>
                                    <h5 style=""text-align:center"" class=""fw-500"">Contratistas</h5>
                                </div>
                                <i class=""fal fa-user-hard-hat position-absolute pos-right pos-b");
            WriteLiteral(@"ottom opacity-15 mb-n5 mr-n6"" style=""font-size: 8rem;""></i>
                            </div>
                        </div>
                        <div class=""col-xl-3"" style="" width: 180px;"">
                            <div class=""p-3 bg-fusion-400 rounded overflow-hidden position-relative text-white mb-g"" data-toggle=""modal"" data-target=""#infoEnter"">
                                <div class=""fc-center"">
                                    <h3 id=""countVisitors"" style=""text-align:center"" class=""display-4 d-block l-h-n m-0 fw-500"">
                                        0
                                    </h3>
                                    <h5 style=""text-align:center"" class=""fw-500"">Visitantes</h5>
                                </div>
                                <i class=""fal fa-user-clock position-absolute pos-right pos-bottom opacity-15 mb-n5 mr-n6"" style=""font-size: 8rem;""></i>
                            </div>
                        </div>
                        <di");
            WriteLiteral(@"v class=""col-xl-3"" style="" width: 180px;"">
                            <div class=""p-3 bg-fusion-500 rounded overflow-hidden position-relative text-white mb-g"" data-toggle=""modal"" data-target=""#infoEnterProv"">
                                <div class=""fc-center"">
                                    <h3 id=""countProviders"" style=""text-align:center"" class=""display-4 d-block l-h-n m-0 fw-500"">
                                        0
                                    </h3>
                                    <h5 style=""text-align:center"" class=""fw-500"">Proveedores</h5>
                                </div>
                                <i class=""fal fa-user-minus position-absolute pos-right pos-bottom opacity-15 mb-n5 mr-n6"" style=""font-size: 8rem;""></i>
                            </div>
                        </div>
                        <div class=""col-xl-3"" style="" width: 180px;"">
                            <div class=""p-3 bg-fusion-600 rounded overflow-hidden position-relative text-w");
            WriteLiteral(@"hite mb-g"">
                                <div class=""fc-center"">
                                    <h3 id=""countTotal"" style=""text-align:center"" class=""display-4 d-block l-h-n m-0 fw-500"">
                                        0
                                    </h3>
                                    <h5 style=""text-align:center"" class=""fw-500"">C. Total</h5>
                                </div>
                                <i class=""fal fa-users-class position-absolute pos-right pos-bottom opacity-15 mb-n5 mr-n6"" style=""font-size: 8rem;""></i>
                            </div>
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""frame-wrap col-md-6"">
                            <button data-toggle=""modal"" data-target=""#default-example-modal-lg"" onclick=""limpiarFormulario()"" class=""button"" type=""button"">
                                AGREGAR
                            </button>
                   ");
            WriteLiteral(@"         <button data-toggle=""modal"" data-target=""#default-example-modal-lg"" id=""editVissi"" onclick=""editVisitidor()"" class=""button"" type=""button"" disabled>
                                EDITAR
                            </button>
                            <button onclick=""addSecurity()"" id=""addSe"" class=""button"" type=""button"" disabled>
                                AGREGAR SE.
                            </button>
                            <button onclick=""eliminar()"" class=""button"" id=""deleteEvent"" disabled>
                                ELIMINAR
                            </button>
                            <button type=""button"" class=""button"" data-action=""toggle"" data-class=""d-flex"" data-target=""#panel-compose"" data-focus=""message-to"">
                                ENV. INV.
                            </button>
                        </div>
                        <div class=""col-md-6"">
                            <div class=""row"">
                                <div clas");
            WriteLiteral(@"s=""col-md-8""></div>
                                <div id=""clockdate"" class=""row col-md-4"">
                                    <div class=""clockdate-wrapper"">
                                        <div id=""date""></div>
                                        <div id=""clock"" style=""text-align: center;""></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""panel-content"">
                    <div class=""tab-content pt-4"">
                        <div class=""tab-pane fade show active"" id=""tab_default-1"" role=""tabpanel"">
                            <div style=""margin-bottom: 5px;"">
                                <div class=""input-group input-group-lg"">
                                    <div class=""input-group-prepend"">
                                        <span class=""input-group-text"" id=""inputGroup-sizing-lg");
            WriteLiteral(@""">Filtrar</span>
                                    </div>
                                    <input type=""text""
                                           oninput=""onQuickFilterChanged()""
                                           id=""quickFilter""
                                           class=""form-control""
                                           aria-label=""Large""
                                           aria-describedby=""inputGroup-sizing-sm"" />
                                </div>
                            </div>
                            <div id=""myGrid"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""img"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""c");
            WriteLiteral(@"lose"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                <img style=""width:260px; height:230px;"" id=""imgage"" />
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""infoEnter"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div id=""gridVisEnter"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""infoEnter");
            WriteLiteral(@"Cont"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div id=""gridContEnter"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""infoEnterProv"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div id=""gridProvEnter"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
            <div class=""modal-footer"">
                <butt");
            WriteLiteral(@"on type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<div id=""DivVis"" class=""panel"" style=""display:none;"">
    <div class=""panel-container show"">
        <div class=""panel-content"">
            <div class=""tab-content pt-4"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db55265", async() => {
                WriteLiteral(@"
                    <div class=""row"" id=""js-contacts"">
                        <div class=""row"">
                            <div class=""col-xl-2"" style=""padding:0;"">
                                <a data-toggle=""modal"" href=""#img"">
                                    <img style=""width:260px; height:230px;"" id=""fotoVis"" alt=""image"">
                                    <br />
                                    <img style=""width:260px; height:230px;"" id=""firmaVis"" alt=""firma"">
                                </a>
                            </div>
                            <div class=""col-xl-4"">
                                <div class=""dropdown-menu"">
                                    <a class=""dropdown-item"" href=""#"">Editar</a>
                                </div>
                                <div>
                                    <label>Nombres y Apellidos: </label>
                                    <span id=""names"" name=""names""></span>
                                </d");
                WriteLiteral(@"iv>
                                <div>
                                    <label>Empresa: </label>
                                    <span id=""company"" name=""company""></span>
                                </div>
                                <div>
                                    <label>Profesión: </label>
                                    <span id=""profesionVis"" name=""profesionVis""></span>
                                </div>
                                <div>
                                    <label>Identificación: </label>
                                    <span id=""idV""></span>
                                </div>
                                <div>
                                    <label>Tipo Documento: </label>
                                    <span id=""typeDoco""></span>
                                </div>
                                <div>
                                    <label>Tipo Visitante: </label>
                                    <s");
                WriteLiteral(@"pan id=""typeVi""></span>
                                </div>
                                <div>
                                    <label>RH: </label>
                                    <span id=""rhh""></span>
                                </div>
                                <div>
                                    <label>Género:  </label>
                                    <span id=""gen""></span>
                                </div>
                                <div>
                                    <label>Correo Electrónico: </label>
                                    <span id=""email""></span>
                                </div>
                                <div>
                                    <label>Fecha Expedición Doc: </label>
                                    <span id=""fExpedicionDoc""></span>
                                </div>
                                <div>
                                    <label>Detalle: </label>
                      ");
                WriteLiteral(@"              <span id=""detalleVis""></span>
                                </div>
                                <div>
                                    <label>Empleado Responsable: </label>
                                    <span id=""empleadoRespon""></span>
                                </div>
                            </div>
                            <div class=""panel-container show col-xl-4"">
                                <div class=""panel-content"">
                                    <ul class=""nav nav-tabs nav-tabs-clean"" role=""tablist"">
                                        <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab-vehiculosInfo"" role=""tab"">Vehiculos</a></li>
                                        <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab-arlInfo"" role=""tab"">Arl</a></li>
                                        <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab-equiposInfo"" role=""tab"">Equipos</a></li>");
                WriteLiteral(@"
                                        <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab-incidentesInfo"" role=""tab"">Incidentes</a></li>
                                    </ul>
                                    <div class=""tab-content p-3"">
                                        <div class=""tab-pane fade"" id=""tab-vehiculosInfo"" role=""tabpanel"" aria-labelledby=""tab-vehiculos"">
                                            <div class=""row"">
                                                <div class=""col-xl-12"">
                                                    <div style=""padding-bottom: 10px;"">
                                                        <button data-toggle=""modal"" data-target=""#vehicleModal"" onclick=""limpiarFormulario()"" class=""btn btn-primary waves-effect waves-themed"" type=""button"">
                                                            AGREGAR
                                                        </button>
                                              ");
                WriteLiteral(@"      </div>
                                                    <div id=""gridVehiculos"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""tab-pane fade"" id=""tab-arlInfo"" role=""tabpanel"" aria-labelledby=""tab-arl"">
                                            <div class=""row"">
                                                <div class=""col-xl-12"">
                                                    <div style=""padding-bottom: 10px;"">
                                                        <button data-toggle=""modal"" data-target=""#arlModal"" onclick=""limpiarFormulario()"" class=""btn btn-primary waves-effect waves-themed"" type=""button"">
                                                            AGREGAR
                                                        </button>
                              ");
                WriteLiteral(@"                      </div>
                                                    <div id=""gridArl"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""tab-pane fade"" id=""tab-equiposInfo"" role=""tabpanel"" aria-labelledby=""tab-equipos"">
                                            <div class=""row"">
                                                <div class=""col-xl-12"">
                                                    <div style=""padding-bottom: 10px;"">
                                                        <button data-toggle=""modal"" data-target=""#deviceModal"" onclick=""limpiarFormulario()"" class=""btn btn-primary waves-effect waves-themed"" type=""button"">
                                                            AGREGAR
                                                        </button>
         ");
                WriteLiteral(@"                                           </div>
                                                    <div id=""gridEquipos"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""tab-pane fade"" id=""tab-incidentesInfo"" role=""tabpanel"" aria-labelledby=""tab-incidentes"">
                                            <div class=""row"">
                                                <div class=""col-xl-12"">
                                                    <div style=""padding-bottom: 10px;"">
                                                        <button data-toggle=""modal"" data-target=""#incidentsModal"" onclick=""limpiarFormulario()"" class=""btn btn-primary waves-effect waves-themed"" type=""button"">
                                                            AGREGAR
                                          ");
                WriteLiteral(@"              </button>
                                                    </div>
                                                    <div id=""gridIncidentes"" style=""height: 300px;"" class=""ag-theme-alpine""></div>
                                                    <div style=""padding: 5px;""><button type=""submit"" class=""btn btn-primary"" onclick=""saveIncEdit()"">Guardar</button></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-xl-2"" style=""padding:0;"">
                                <button class=""btn btn-info"" type=""button"" onclick=""accessState(0)"">Salida</button>
                                <button class=""btn btn-info"" type=""button"" onclick=""accessState(1)"">Entrada</button>
                            </div>
                ");
                WriteLiteral("        </div>\r\n                    </div>\r\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<div class=""modal fade modal-fullscreen example-modal-fullscreen"" id=""mdlPreview"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered"" role=""document"">
        <div class=""modal-content h-100 border-0 shadow-0 bg-fusion-800"">
            <button type=""button"" style=""margin-top:500px !important"" class=""close p-sm-2 p-md-4 text-white fs-xxl position-absolute pos-right mr-sm-2 mt-sm-1 z-index-space"" data-dismiss=""modal"" aria-label=""Close"">
                <span aria-hidden=""true""><i class=""fal fa-times""></i></span>
            </button>
            <div class=""modal-body p-0"">
                <div class=""col-lg-12"">
                    <div class=""row"" style=""margin-top:500px;"">
                        <div class=""col-lg-2""></div>
                        <div class=""col-lg-8"">
                            <div class=""row"">
                                <div class=""col-lg-12"">
                 ");
            WriteLiteral(@"                   <canvas id=""canvas-pdf""></canvas>
                                </div>
                                <div class=""col-md-12"">
                                    <button id=""prev"" type=""button"">Anterior</button>

                                    &nbsp; &nbsp;<span>Page: <span id=""page_num""></span> / <span id=""page_count""></span></span>
                                    <button id=""next"" type=""button"">Siguiente</button>
                                </div>

                            </div>

                        </div>
                        <div class=""col-lg-2""></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db68289", async() => {
                WriteLiteral(@"
    <div class=""modal"" id=""default-example-modal-lg"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Agregar/Actualizar Visitante</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true""><i");
                BeginWriteAttribute("class", " class=\"", 24675, "\"", 24720, 2);
#nullable restore
#line 449 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
WriteAttributeValue("", 24683, Settings.Theme.IconPrefix, 24683, 28, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue(" ", 24711, "fa-times", 24712, 9, true);
                EndWriteAttribute();
                WriteLiteral(@"></i></span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""panel-container show col-12"">
                            <div class=""panel-content"">
                                <ul class=""nav nav-tabs nav-tabs-clean"" role=""tablist"">
                                    <li class=""nav-item""><a class=""nav-link active"" data-toggle=""tab"" href=""#tab-visitante"" role=""tab"">Visitante</a></li>
                                    <li class=""nav-item""><a class=""nav-link"" data-toggle=""tab"" href=""#tab-imgs"" role=""tab"">Fotos</a></li>
                                </ul>
                                <div class=""tab-content p-3"">
                                    <div class=""tab-pane fade show active"" id=""tab-visitante"" role=""tabpanel"" aria-labelledby=""tab-visitante"">
                                        <div class=""row"">
                                            <div class=""col-xl");
                WriteLiteral(@"-6"">
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""idVisitor"">Documento<span class=""text-danger"">*</span></label>
                                                    <input type=""text"" id=""idVisitor"" name=""Identificacion"" class=""form-control"" placeholder=""Documento"" required>
                                                    <div class=""valid-tooltip"">
                                                        Looks good!
                                                    </div>
                                                    <div class=""invalid-tooltip"">
                                                        Por favor digite el documento.
                                                    </div>
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <l");
                WriteLiteral(@"abel class=""form-label"" for=""namesVisitor"">Nombres</label>
                                                    <input type=""text"" id=""nombresVisitante"" name=""Nombres"" class=""form-control"" placeholder=""Nombres"">
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""lastNamesVisitor"">Apellidos</label>
                                                    <input type=""text"" id=""lastNamesVisitor"" name=""Apellidos"" class=""form-control"" placeholder=""Apellidos"">
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""dateExpeditionVisitor"">Fecha Expedición</label>
                                                    <input class=""form-control"" id=""dateExpeditionVisitor"" type=""date"" name=""FExpedici");
                WriteLiteral(@"onDoc"">
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""DocType"">Tipo Documento</label>
                                                    <select class=""form-control"" id=""TipoDoc"" name=""TipoDoc"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db73284", async() => {
                    WriteLiteral("CC");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_22.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_22);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db74562", async() => {
                    WriteLiteral("CE");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_23.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_23);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db75840", async() => {
                    WriteLiteral("PASAPORTE");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_24.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_24);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""rhVisitor"">Rh</label>
                                                    <input type=""text"" id=""rhVisitor"" name=""Rh"" class=""form-control"" placeholder=""Rh"">
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""professionVisitor"">Profesión</label>
                                                    <input type=""text"" id=""professionVisitor"" name=""Profesion"" class=""form-control"" placeholder=""Profesión"">
                                                </div>
                                            </div>
                                            <div class=""col-xl");
                WriteLiteral(@"-6"">
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""visitorType"">Tipo Visitante</label>
                                                    <select class=""form-control"" id=""visitorType"" name=""TipoVisitante"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db78553", async() => {
                    WriteLiteral("PROVEEDOR");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_25.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_25);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db79838", async() => {
                    WriteLiteral("VISITANTE");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_26.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_26);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db81123", async() => {
                    WriteLiteral("CONTRATISTA");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_27.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_27);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db82410", async() => {
                    WriteLiteral("EMPLEADO");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_28.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_28);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""companyVisitor"">Empresa</label>
                                                    <input type=""text"" id=""companyVisitor"" name=""Empresa"" class=""form-control"" placeholder=""Empresa"">
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""accessStateVisitor"">Estado Acceso<span class=""text-danger"">*</span></label>
                                                    <select class=""form-control"" id=""estadoAcceso"" required>
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db84589", async() => {
                    WriteLiteral("Dentro");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_29.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_29);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db85871", async() => {
                    WriteLiteral("Fuera");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_30.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_30);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""employeeVisitor"">Empleado Responsable</label>
                                                    <input type=""text"" id=""employeeVisitor"" name=""Responsable"" class=""form-control"" placeholder=""Responsable"">
                                                </div>
");
                WriteLiteral(@"                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""genderVisitor"">Género</label>
                                                    <select class=""form-control"" id=""genderVisitor"" name=""Genero"">
                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db88066", async() => {
                    WriteLiteral("MASCULINO");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_31.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_31);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db89351", async() => {
                    WriteLiteral("FEMENINO");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_32.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_32);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                                    </select>
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""emailVisitor"">Correo</label>
                                                    <input type=""email"" id=""emailVisitor"" name=""Correo"" class=""form-control"" placeholder=""Correo"">
                                                </div>
                                                <div class=""col-md-12 mb-3"">
                                                    <label class=""form-label"" for=""detailVisitor"">Detalle</label>
                                                    <input type=""text"" id=""detailVisitor"" name=""Detalle"" class=""form-control"" placeholder=""Detalle"">
                                                </div>
                                            </div>
                                        </div>
         ");
                WriteLiteral(@"                           </div>
                                    <div class=""tab-pane fade"" id=""tab-imgs"" role=""tabpanel"" aria-labelledby=""tab-imgs"">
                                        <div class=""row"">
                                            <div class=""col-xl-6"">
                                                <div class=""col-md-12 mb-3"">
                                                    <div class=""contentarea"">
                                                        <div class=""camera"" id=""camera"">
                                                            <video id=""video"">Video stream not available.</video>
                                                        </div>
                                                        <div id=""take""><button id=""startbutton"">Tomar Foto!</button></div>
                                                        <canvas id=""canvas""></canvas>
                                                        <div class=""output"">
                         ");
                WriteLiteral(@"                                   <img id=""photo"" class=""form-control"" name=""Foto"" alt=""The screen capture will appear in this box."">
                                                        </div>
                                                        <div id=""new""><button id=""nueva"">Nueva Foto</button></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-xl-6"">
                                                <div class=""col-md-12 mb-3"">
                                                    <div class=""row"" id=""btnStartStopWizardContent"">
                                                        <div class=""col-md-12"">
                                                            <div class=""form-group"">
                                                                <label>Formulario de firma</label>
                         ");
                WriteLiteral(@"                                       <div id=""btnStartStopWizard"">
                                                                    <div id=""imageBox""
                                                                         onClick=""Initialize()""
                                                                         class=""boxed""
                                                                         style=""height: 35mm; width: 60mm; border: 1px solid #d3d3d3;""
                                                                         rel=""tooltip""
                                                                         data-placement=""top""
                                                                         data-original-title=""<em> ¡Presiona aqui! </em> para cargar el formulario de firma!""
                                                                         data-html=""true"">
                                                                    </div>
                                   ");
                WriteLiteral(@"                             </div>
                                                            </div>
                                                        </div>

                                                        <div class=""col-md-8"">
                                                            <textarea rows=""4"" id=""txtDisplay"" style=""color: #0267a9; display: none;""></textarea>
                                                        </div>

                                                        <input type=""checkbox"" id=""chkDisplayWizard"" style=""display: none;"" checked=""checked"" />
                                                        <input type=""checkbox"" id=""chkLargeCheckbox"" style=""display: none;"" />
                                                        <input type=""checkbox"" id=""chkSigText"" style=""display: none;"" />
                                                        <input type=""radio"" name=""buttontype"" id=""standard"" style=""display: none;"" value=""standard"" />
            ");
                WriteLiteral(@"                                            <input type=""radio"" name=""buttontype"" id=""utf8"" style=""display: none;"" value=""utf8"" />
                                                        <input type=""radio"" name=""buttontype"" id=""local"" style=""display: none;"" value=""local"">
                                                        <input type=""radio"" name=""buttontype"" id=""remote"" value=""remote"" style=""display: none;"" checked=""checked"" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
            ");
                WriteLiteral("        <button type=\"submit\" class=\"btn btn-primary\" onclick=\"addVisitor()\">Guardar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_33);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_35.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_35);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    var validateForm = false;
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                        validateForm = true;
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false
        );
    })();
</script>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "139eb95e6a0f32838a2a06de38546311793263db99709", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_36.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_36);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db100832", async() => {
                WriteLiteral(@"
    <div class=""modal"" id=""deviceModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Agregar Equipos</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true""><i");
                BeginWriteAttribute("class", " class=\"", 40620, "\"", 40665, 2);
#nullable restore
#line 650 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
WriteAttributeValue("", 40628, Settings.Theme.IconPrefix, 40628, 28, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue(" ", 40656, "fa-times", 40657, 9, true);
                EndWriteAttribute();
                WriteLiteral(@"></i></span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""col-xl-6"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""modelEq"">Modelo</label>
                                <input type=""text"" id=""modelEq"" name=""modelEq"" class=""form-control"" placeholder=""Modelo"">
                            </div>
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""brandEq"">Marca</label>
                                <input type=""text"" id=""brandEq"" name=""brandEq"" class=""form-control"" placeholder=""Marca"">
                            </div>
                        </div>
                        <div class=""col-xl-6"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""serialEq"">Serial<");
                WriteLiteral(@"/label>
                                <input type=""text"" id=""serialEq"" name=""serialEq"" class=""form-control"" placeholder=""Serial"">
                            </div>
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""colourEq"">Color</label>
                                <input type=""text"" id=""colourEq"" name=""colourEq"" class=""form-control"" placeholder=""Color"">
                            </div>
                        </div>
                        <div class=""col-xl-12"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""detailsEq"">Detalles</label>
                                <textarea class=""form-control"" id=""detailsEq"" name=""detailsEq"" rows=""5""></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""bu");
                WriteLiteral("tton\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n                    <button type=\"submit\" class=\"btn btn-primary\" onclick=\"addDevices();\">Guardar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_37);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_35.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_35);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db106213", async() => {
                WriteLiteral(@"
    <div class=""modal"" id=""arlModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Agregar Arl</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true""><i");
                BeginWriteAttribute("class", " class=\"", 43489, "\"", 43534, 2);
#nullable restore
#line 699 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
WriteAttributeValue("", 43497, Settings.Theme.IconPrefix, 43497, 28, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue(" ", 43525, "fa-times", 43526, 9, true);
                EndWriteAttribute();
                WriteLiteral(@"></i></span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""col-xl-6"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""dateExpArl"">Fecha de Expiración</label>
                                <input class=""form-control"" id=""dateExpArl"" type=""date"" name=""dateExpArl"" value=""2023-07-23"">
                            </div>
                        </div>
                        <div class=""col-xl-12"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""detailsArl"">Detalles</label>
                                <textarea class=""form-control"" name=""detailsArl"" id=""detailsArl"" rows=""5""></textarea>
                            </div>
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label");
                WriteLiteral("\">File (Browser)</label>\r\n                                <div class=\"custom-file\">\r\n");
                WriteLiteral("                                    <input type=\"file\" id=\"files\" onchange=\"ValidateSingleInput(this);\" /><br />\r\n");
                WriteLiteral(@"                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
                    <button type=""submit"" class=""btn btn-primary"" onclick=""addArl();"">Guardar</button>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_38);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_35.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_35);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db110989", async() => {
                WriteLiteral(@"
    <div class=""modal"" id=""vehicleModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Agregar Vehículos</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true""><i");
                BeginWriteAttribute("class", " class=\"", 46061, "\"", 46106, 2);
#nullable restore
#line 742 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
WriteAttributeValue("", 46069, Settings.Theme.IconPrefix, 46069, 28, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue(" ", 46097, "fa-times", 46098, 9, true);
                EndWriteAttribute();
                WriteLiteral(@"></i></span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""col-xl-6"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""brandVeh"">Marca</label>
                                <input type=""text"" id=""brandVehEdit"" name=""brandVehEdit"" class=""form-control"" placeholder=""Marca"">
                            </div>
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""plateVeh"">Placa</label>
                                <input type=""text"" id=""plateVehEdit"" name=""plateVehEdit"" class=""form-control"" placeholder=""Placa"">
                            </div>
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""colourVeh"">Color</label>
                                <input type=""text"" ");
                WriteLiteral(@"id=""colourVehEdit"" name=""colourVehEdit"" class=""form-control"" placeholder=""Color"">
                            </div>
                        </div>
                        <div class=""col-xl-12"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""detailsVeh"">Detalles</label>
                                <textarea class=""form-control"" id=""detailsVehEdit"" name=""detailsVehEdit"" rows=""5""></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cerrar</button>
                    <button type=""submit"" class=""btn btn-primary"" onclick=""addVehicle()"">Guardar</button>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_39);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_35.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_35);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db115961", async() => {
                WriteLiteral(@"
    <div class=""modal"" id=""incidentsModal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Agregar incidentes</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true""><i");
                BeginWriteAttribute("class", " class=\"", 48602, "\"", 48647, 2);
#nullable restore
#line 785 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
WriteAttributeValue("", 48610, Settings.Theme.IconPrefix, 48610, 28, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue(" ", 48638, "fa-times", 48639, 9, true);
                EndWriteAttribute();
                WriteLiteral(@"></i></span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""col-xl-6"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""dateExpInc"">Fecha</label>
                                <input class=""form-control"" type=""date"" name=""Fecha"" value=""2023-07-23"">
                            </div>
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""affairInc"">Asunto</label>
                                <input type=""text"" name=""Asunto"" class=""form-control"" placeholder=""Asunto"">
                            </div>
                        </div>
                        <div class=""col-xl-12"">
                            <div class=""col-md-12 mb-3"">
                                <label class=""form-label"" for=""descriptionInc"">Descripción</label>
    ");
                WriteLiteral(@"                            <textarea class=""form-control"" name=""Descripcion"" rows=""5""></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancelar</button>
                    <button type=""submit"" class=""btn btn-primary"" onclick=""addIncidents()"">Guardar</button>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_40);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_34);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_35.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_35);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            DefineSection("ScriptsBlock", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db120643", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_41);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db121745", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_42);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db122847", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_43);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db123949", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_44);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js\"></script>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "139eb95e6a0f32838a2a06de38546311793263db125149", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_45);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script type=""text/javascript"" charset=""utf-8"">

        var visitorsCount = 0;
        var totalVisitors = 0;
        var suppliersCount = 0;
        var contractorsCount = 0;
        var b64Firma;
        var port;
        var wgssSignatureSDK;
        var SiteId;
        var b64;
        layouts.horizontalNavigation('on');

        const pdfjsLib = window['pdfjs-dist/build/pdf'];
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js';

        function startTime() {
            var today = new Date();
            var hr = today.getHours();
            var min = today.getMinutes();
            var sec = today.getSeconds();
            ap = (hr < 12) ? ""<span>AM</span>"" : ""<span>PM</span>"";
            hr = (hr == 0) ? 12 : hr;
            hr = (hr > 12) ? hr - 12 : hr;
            //Add a zero in front of numbers<10
            hr = checkTime(hr);
            min = checkTime(min);
            sec = checkTi");
                WriteLiteral(@"me(sec);
            document.getElementById(""clock"").innerHTML = hr + "":"" + min + "":"" + sec + "" "" + ap;

            var months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];
            var days = ['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'];
            var curWeekDay = days[today.getDay()];
            var curDay = today.getDate();
            var curMonth = months[today.getMonth()];
            var curYear = today.getFullYear();
            var date = curWeekDay + "", "" + curDay + "" "" + curMonth + "" "" + curYear;
            document.getElementById(""date"").innerHTML = date;

            var time = setTimeout(function () { startTime() }, 500);
        }

        function checkTime(i) {
            if (i < 10) {
                i = ""0"" + i;
            }
            return i;
        }

        var pdfDoc = null,
            canvas = null,
            ctx = null,
            pageNum = 1,
            pageRendering = false,
            pa");
                WriteLiteral(@"geNumPending = null,
            scale = 1.5;

        function renderPage(num) {
                pageRendering = true;

                pdfDoc.getPage(num).then(function (page) {
                    let viewport = page.getViewport({ scale: scale });
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    let renderContext = {
                        canvasContext: ctx,
                        viewport: viewport
                    };

                    let renderTask = page.render(renderContext);

                    renderTask.promise.then(function () {
                        pageRendering = false;

                        if (pageNumPending !== null) {
                            renderPage(pageNumPending);
                            pageNumPending = null;
                        }
                    });
                });

                document.getElementById('page_num').textContent = num;
          ");
                WriteLiteral(@"  }

        function queueRenderPage(num) {
                if (pageRendering)
                    pageNumPending = num;
                else
                    renderPage(num);
            }

        function onPrevPage() {
                if (pageNum <= 1)
                    return;

                pageNum--;
                queueRenderPage(pageNum);
            }

        function onNextPage() {
                if (pageNum >= pdfDoc.numPages)
                    return;

                pageNum++;
                queueRenderPage(pageNum);
            }

        function showPDF(pdfData) {
                pageNum = 1;
                canvas = document.getElementById('canvas-pdf');
                ctx = canvas.getContext('2d');

                document.getElementById('prev').addEventListener('click', onPrevPage);
                document.getElementById('next').addEventListener('click', onNextPage);

                //const pdfData = atob(pdfTextEncodedInBase64);
       ");
                WriteLiteral(@"         const loadingTask = pdfjsLib.getDocument({ data: pdfData });

                loadingTask.promise.then(function (pdf) {
                    pdfDoc = pdf;
                    document.getElementById('page_count').textContent = pdfDoc.numPages;

                    renderPage(pageNum);
                }, function (reason) {
                    console.error(reason);
                });
            }

        function demo1() {
            jsPDF.init();
            jsPDF.addPage();
            jsPDF.text(20, 20, 'Hello world!');
            jsPDF.text(20, 30, 'This is client-side Javascript, pumping out a PDF.');
            // Making Data URI
            var out = jsPDF.output();
            var url = 'data:application/pdf;base64,' + Base64.encode(out);
            document.location.href = url;
        }

        var _validFileExtensions = ["".pdf""];

        function ValidateSingleInput(oInput) {
            if (oInput.type == ""file"") {
                var sFileName = oInput.");
                WriteLiteral(@"value;
                if (sFileName.length > 0) {
                    var blnValid = false;
                    for (var j = 0; j < _validFileExtensions.length; j++) {
                        var sCurExtension = _validFileExtensions[j];
                        if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {
                            blnValid = true;
                            break;
                        }
                    }
                    if (!blnValid) {
                        alert(""Sorry, "" + sFileName + "" is invalid, allowed extensions are: "" + _validFileExtensions.join("", ""));
                        oInput.value = """";
                        return false;
                    }
                }
            }
            return true;
        }

        port = '8000';
        wgssSignatureSDK = new WacomGSS_SignatureSDK(onDetectRunning, port);

        var timeout = setTimeout(timedDe");
                WriteLiteral(@"tect, 1500);

        function onDetectRunning() {
            clearTimeout(timeout);
        }

        function timedDetect() {
            if (!wgssSignatureSDK) return;

            if (wgssSignatureSDK.running) {
                //TODO
                Command: toastr[""success""](""Se detectó el servicio SigCaptX"", ""Exitoso!"")

                toastr.options = {
                    ""closeButton"": true,
                    ""debug"": false,
                    ""newestOnTop"": false,
                    ""progressBar"": true,
                    ""positionClass"": ""toast-top-right"",
                    ""preventDuplicates"": false,
                    ""showDuration"": 3000,
                    ""hideDuration"": 1000,
                    ""timeOut"": 10000,
                    ""extendedTimeOut"": 10000,
                    ""showEasing"": ""swing"",
                    ""hideEasing"": ""linear"",
                    ""showMethod"": ""fadeIn"",
                    ""hideMethod"": ""fadeOut""
                }
   ");
                WriteLiteral(@"         }
            else {
                if (wgssSignatureSDK.service_detected) {
                    //TODO
                    Command: toastr[""warning""](""Se detectó el servicio SigCaptX, pero no el servidor"", ""warning"")
                    toastr.options = {
                        ""closeButton"": true,
                        ""debug"": false,
                        ""newestOnTop"": false,
                        ""progressBar"": true,
                        ""positionClass"": ""toast-top-right"",
                        ""preventDuplicates"": false,
                        ""showDuration"": 3000,
                        ""hideDuration"": 1000,
                        ""timeOut"": 10000,
                        ""extendedTimeOut"": 10000,
                        ""showEasing"": ""swing"",
                        ""hideEasing"": ""linear"",
                        ""showMethod"": ""fadeIn"",
                        ""hideMethod"": ""fadeOut""
                    }
                }
                else {
        ");
                WriteLiteral(@"            //TODO
                    //console.log(""SigCaptX service not detected"");
                    //Command: toastr[""error""](""Servicio SigCaptX no detectado"", ""error"")
                    //toastr.options = {
                    //    ""closeButton"": true,
                    //    ""debug"": false,
                    //    ""newestOnTop"": false,
                    //    ""progressBar"": true,
                    //    ""positionClass"": ""toast-top-right"",
                    //    ""preventDuplicates"": false,
                    //    ""showDuration"": 3000,
                    //    ""hideDuration"": 1000,
                    //    ""timeOut"": 10000,
                    //    ""extendedTimeOut"": 10000,
                    //    ""showEasing"": ""swing"",
                    //    ""hideEasing"": ""linear"",
                    //    ""showMethod"": ""fadeIn"",
                    //    ""hideMethod"": ""fadeOut""
                    //}
                }
            }
        }

        function Initiali");
                WriteLiteral(@"ze() {
            if (!wgssSignatureSDK) {
                wgssSignatureSDK = new WacomGSS_SignatureSDK(onDetectRunning, port);
            }

            wizardEventController.start_stop(3);
        }

        function Test() {
            var data = $(""#txtDisplay"").val();
            alert(data);
        }

        (function () {

        var width = 320; // We will scale the photo width to this
        var height = 0; // This will be computed based on the input stream
        var streaming = false;
        var video = null;
        var canvas = null;
        var photo = null;
        var startbutton = null;
        var nueva = null;

        function startup() {
                video = document.getElementById('video');
                canvas = document.getElementById('canvas');
                photo = document.getElementById('photo');
                startbutton = document.getElementById('startbutton');
                nueva = document.getElementById('nueva');

            ");
                WriteLiteral(@"    navigator.mediaDevices.getUserMedia({
                    video: true,
                    audio: false
                })
                    .then(function (stream) {
                        video.srcObject = stream;
                        video.play();
                    })
                    .catch(function (err) {
                        console.log(""An error occurred: "" + err);
                    });

                video.addEventListener('canplay', function (ev) {
                    if (!streaming) {
                        height = video.videoHeight / (video.videoWidth / width);

                        if (isNaN(height)) {
                            height = width / (4 / 3);
                        }

                        video.setAttribute('width', width);
                        video.setAttribute('height', height);
                        canvas.setAttribute('width', width);
                        canvas.setAttribute('height', height);
                       ");
                WriteLiteral(@" streaming = true;
                    }
                }, false);

                startbutton.addEventListener('click', function (ev) {
                    takepicture();
                    ev.preventDefault();
                    document.getElementById(""camera"").style.display = ""none"";
                    document.getElementById(""startbutton"").style.display = ""none"";
                }, false);

                nueva.addEventListener('click', function (ev) {
                    document.getElementById(""camera"").style.display = ""inline"";
                    document.getElementById(""startbutton"").style.display = ""inline"";
                }, false);

                clearphoto();
            }

        function clearphoto() {
                var context = canvas.getContext('2d');
                context.fillStyle = ""#AAA"";
                context.fillRect(0, 0, canvas.width, canvas.height);

                var data = canvas.toDataURL('image/png');
                photo.setAttribute");
                WriteLiteral(@"('src', data);
            }

        function takepicture() {
                var context = canvas.getContext('2d');
                if (width && height) {
                    canvas.width = width;
                    canvas.height = height;
                    context.drawImage(video, 0, 0, width, height);

                    var data = canvas.toDataURL('image/png');
                    photo.setAttribute('src', data);
                } else {
                    clearphoto();
                }
            }

        window.addEventListener('load', startup, false);
        })();

        function editVisitidor() {
            var selectedRows = leftGridOptions.api.getSelectedRows();
            document.getElementById(""nombresVisitante"").value = selectedRows.length === 1 ? selectedRows[0].Nombres : '';
            document.getElementById(""lastNamesVisitor"").value = selectedRows.length === 1 ? selectedRows[0].Apellidos : '';
            document.getElementById(""companyVisitor"").value");
                WriteLiteral(@" = selectedRows.length === 1 ? selectedRows[0].Empresa : '';
            document.getElementById(""TipoDoc"").value = selectedRows.length === 1 ? selectedRows[0].TipoDoc : '';
            document.getElementById(""idVisitor"").value = selectedRows.length === 1 ? selectedRows[0].Identificacion : '';
            document.getElementById(""emailVisitor"").value = document.getElementById(""email"").innerText;
            document.getElementById(""detailVisitor"").value = document.getElementById(""detalleVis"").innerText;
            document.getElementById(""professionVisitor"").value = document.getElementById(""profesionVis"").innerText;
            document.getElementById(""rhVisitor"").value = document.getElementById(""rhh"").innerText;
            document.getElementById(""dateExpeditionVisitor"").value = document.getElementById(""fExpedicionDoc"").innerText;
            document.getElementById(""photo"").setAttribute('src', document.getElementById(""fotoVis"").src);
            document.getElementById(""firma"").setAttribute('src");
                WriteLiteral(@"', document.getElementById(""firmaVis"").src);
            var accessVis = selectedRows.length === 1 ? selectedRows[0].EstadoAcceso : '';
            if (accessVis) {
                document.getElementById(""estadoAcceso"").value = ""Dentro"";
            } else {
                document.getElementById(""estadoAcceso"").value = ""Fuera"";
            }
        }

        function limpiarFormulario() {
            document.getElementById(""addVisitorForm"").reset();
            document.getElementById(""photo"").src = '';
        }

        function addVisitor() {
            var elements = document.getElementById(""addVisitorForm"").elements;
            var obj = {};
            for (var i = 0; i < elements.length; i++) {
                var item = elements.item(i);
                obj[item.name] = item.value;
            }
            var stateAccess = document.getElementById(""estadoAcceso"").value;
            if (stateAccess == ""Dentro"") {
                obj['EstadoAcceso'] = true;
            }");
                WriteLiteral(@" else {
                obj['EstadoAcceso'] = false;
            }
            var photoVis = document.getElementById('photo').src.split(',')[1];
            obj['Foto'] = photoVis;

            if (document.getElementById('firmaImg')) {
                var firmaViss = document.getElementById('firmaImg').src.split(',')[1];
            }
            obj['Firma'] = firmaViss;

            const file = document.querySelector('#arlPdf').files[0];

            $.ajax({
                url: 'Visitantes/AddVisitor',
                data: { jsonobtj: JSON.stringify(obj) },
                type: ""POST"",
                success: function (data) {
                    if (data == true) {
                        totastSucces();
                        location.reload();
                    } else {
                        toastEror();
                        location.reload();
                    }
                },
                error: function (data) {
                    toastEror();
    ");
                WriteLiteral(@"            }
            });
            }

        function addIncidents() {
            var selectedRows = leftGridOptions.api.getSelectedRows();
            var IdVisi = selectedRows.length === 1 ? selectedRows[0].Id : '';
            var elements = document.getElementById(""formIncidents"").elements;
            var obj = {};
            obj['IdVisitante'] = IdVisi;
            for (var i = 0; i < elements.length; i++) {
                var item = elements.item(i);
                obj[item.name] = item.value;
            }

            $.ajax({
                url: 'Visitantes/AddIncident',
                data: { jsonobtj: JSON.stringify(obj) },
                type: ""POST"",
                success: function (data) {
                    debugger;
                    if (data == true) {
                        totastSucces();
                        location.reload();
                    } else {
                        toastEror();
                        location.reload();
    ");
                WriteLiteral(@"                }
                },
                error: function (data) {
                    toastEror();
                }
            });
        }

        function addDevices() {
            var selectedRows = leftGridOptions.api.getSelectedRows();
            var IdVisi = selectedRows.length === 1 ? selectedRows[0].Id : '';
            var elements = document.getElementById(""formDevices"").elements;
            var obj = {};
            obj['IdVisitante'] = IdVisi;
            for (var i = 0; i < elements.length; i++) {
                var item = elements.item(i);
                obj[item.name] = item.value;
            }

            $.ajax({
                url: 'Visitantes/AddDevices',
                data: { jsonobtj: JSON.stringify(obj) },
                type: ""POST"",
                success: function (data) {
                    debugger;
                    if (data == true) {
                        totastSucces();
                        location.reload();
      ");
                WriteLiteral(@"              } else {
                        toastEror();
                        location.reload();
                    }
                },
                error: function (data) {
                    toastEror();
                }
            });
        }

        function addVehicle() {
            var selectedRows = leftGridOptions.api.getSelectedRows();
            var IdVisi = selectedRows.length === 1 ? selectedRows[0].Id : '';
            var elements = document.getElementById(""formVehicle"").elements;
            var obj = {};
            obj['IdVisitante'] = IdVisi;
            for (var i = 0; i < elements.length; i++) {
                var item = elements.item(i);
                obj[item.name] = item.value;
            }

            $.ajax({
                url: 'Visitantes/AddVehicle',
                data: { jsonobtj: JSON.stringify(obj) },
                type: ""POST"",
                success: function (data) {
                    debugger;
                    if");
                WriteLiteral(@" (data == true) {
                        totastSucces();
                        location.reload();
                    } else {
                        toastEror();
                        location.reload();
                    }
                },
                error: function (data) {
                    toastEror();
                }
            });
        }

        if (window.File && window.FileReader && window.FileList && window.Blob) {
            document.getElementById('files').addEventListener('change', handleFileSelect, false);
        } else {
            alert('The File APIs are not fully supported in this browser.');
        }

        function handleFileSelect(evt) {
            var f = evt.target.files[0]; // FileList object
            var reader = new FileReader();
            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    var binaryData = e.target.result;
");
                WriteLiteral(@"                    //Converting Binary Data to base 64
                    var base64String = window.btoa(binaryData);
                    //showing file converted to base64
                    b64 = base64String;
                };
            })(f);
            // Read in the image file as a data URL.
            reader.readAsBinaryString(f);
        }

        function addArl() {
            debugger;
            var selectedRows = leftGridOptions.api.getSelectedRows();
            var IdVisi = selectedRows.length === 1 ? selectedRows[0].Id : '';
            var elements = document.getElementById(""formArl"").elements;
            var obj = {};
            obj['IdVisitante'] = IdVisi;
            for (var i = 0; i < elements.length; i++) {
                var item = elements.item(i);
                obj[item.name] = item.value;
            }
            debugger;
            obj.ArlPdf = b64;
                $.ajax({
                    url: 'Visitantes/AddArl',
                    ");
                WriteLiteral(@"data: { jsonobtj: JSON.stringify(obj) },
                    type: ""POST"",
                    success: function (data) {
                        debugger;
                        if (data == true) {
                            totastSucces();
                        } else {
                            toastEror();
                        }
                    },
                    error: function (data) {
                        toastEror();
                    }
                });
        }

        function addSecurity() {
            var selectedRows = leftGridOptions.api.getSelectedRows();
            let ide = selectedRows.length === 1 ? selectedRows[0].Identificacion : '';
            let name = selectedRows.length === 1 ? selectedRows[0].Nombres : '';
            let lastName = selectedRows.length === 1 ? selectedRows[0].Apellidos : '';
            let id = selectedRows.length === 1 ? selectedRows[0].Id : '';
            window.location.href = 'SecurityExpert/Index?Ide='+ ide ");
                WriteLiteral(@"+ '&names='+ name +'&lastName=' + lastName + '&id=' + id;
        }

        var leftColumnDefs = [
            { headerName: ""Identificación"", field: ""Identificacion"" },
            { headerName: ""Nombres"", field: ""Nombres"" },
            { headerName: ""Apellidos"", field: ""Apellidos"" },
            { headerName: ""Tipo Doc."", field: ""TipoDoc"" },
            { headerName: ""Tipo Visitante"", field: ""TipoVisitante"" },
            { headerName: ""Empresa"", field: ""Empresa"" },
            {
                headerName: ""Estado Acceso"",
                field: ""EstadoAcceso"",
                suppressMenu: true,
                sortable: true,
                cellRenderer: function (params) {
                    if (params.data.EstadoAcceso == 0) {
                        return '<div class=""col-xl-4""><div class=""custom-control custom-switch""><input type=""checkbox"" class=""custom-control-input"" id=""""><label class=""custom-control-label"" for=""""></label>';
                    } else {
                    ");
                WriteLiteral(@"    return '<div class=""col-xl-4""><div class=""custom-control custom-switch""><input type=""checkbox"" checked="""" class=""custom-control-input"" id=""""><label class=""custom-control-label"" for=""""></label>';
                    }
                }
            }
        ];

        var leftColumnDefsCont = [
            { headerName: ""Identificación"", field: ""Identificacion"" },
            { headerName: ""Nombres"", field: ""Nombres"" },
            { headerName: ""Apellidos"", field: ""Apellidos"" },
            { headerName: ""Empresa"", field: ""Empresa"" }
        ];

        var leftColumnDefsProv = [
            { headerName: ""Identificación"", field: ""Identificacion"" },
            { headerName: ""Nombres"", field: ""Nombres"" },
            { headerName: ""Apellidos"", field: ""Apellidos"" },
            { headerName: ""Empresa"", field: ""Empresa"" },
        ];

        var leftColumnDefsVis = [
            { headerName: ""Identificación"", field: ""Identificacion"" },
            { headerName: ""Nombres"", field: ""No");
                WriteLiteral(@"mbres"" },
            { headerName: ""Apellidos"", field: ""Apellidos"" },
            { headerName: ""Empresa"", field: ""Empresa"" }
        ];

        var leftColumnsDefsEquipos = [
            { headerName: ""Marca"", field: ""marca""},
            {headerName: ""Serial"", field: ""serial""},
            { headerName: ""Color"", field: ""color"" },
            { headerName: ""Modelo"", field: ""modelo"" },
            { headerName: ""Detalle"", field: ""detalle"" }
        ];

        var leftColumnsDefsArl = [
            { headerName: ""Fecha Expiración"", field: ""fechaExpiracion"" },
            { headerName: ""Detalle"", field: ""detalle"" },
            {
                headerName: ""Documento"",
                suppressMenu: true,
                cellRenderer: function (params) {
                    if (params.node.data.documento) {
                        var button = document.createElement('i');

                        button.addEventListener('click', function () {

                            var archivo ");
                WriteLiteral(@"= params.node.data.documento.split(""/"")[1].split("";"")[0];
                            if (archivo == ""pdf"") {
                                var base64 = params.node.data.documento.replace(""data:application/pdf;base64,"", """");
                                showPDF(atob(base64));
                                $(""#mdlPreview"").modal('show');
                            }
                        });
                        button.classList.add('fa');
                        button.classList.add('fa-eye');
                        button.style.cursor = 'pointer';
                        return button;
                    }
                }
            }
        ];

        var leftColumnsDefsVehiculos = [
            { headerName: ""Marca"", field: ""marca"" },
            { headerName: ""Placa"", field: ""placa"" },
            { headerName: ""Color"", field: ""color"" },
            { headerName: ""Detalle"", field: ""detalle"" }
        ];

        var leftGridOptionsIncidentes = {
            colu");
                WriteLiteral(@"mnDefs: [
                { headerName: ""Asunto"", field: ""asunto"" },
                { headerName: ""Fecha Inc."", field: ""fecha"", cellEditor: 'datePicker' },
                { headerName: ""Descripción"", field: ""descripcion"" }
            ],
            defaultColDef: {
                flex: 1,
                minWidth: 100,
                editable: true,
            },
            localeText: AG_GRID_LOCALE_EN,
            editType: 'fullRow',
            onCellValueChanged: onCellValueChanged,
            onRowValueChanged: onRowValueChanged,
            components: {
                datePicker: getDatePicker(),
            }
        };

        function getDatePicker() {
            // function to act as a class
            function Datepicker() { }

            // gets called once before the renderer is used
            Datepicker.prototype.init = function (params) {
                // create the cell
                this.eInput = document.createElement('input');
                ");
                WriteLiteral(@"this.eInput.value = params.value;
                this.eInput.classList.add('ag-input');
                this.eInput.style.height = '100%';

                // https://jqueryui.com/datepicker/
                $(this.eInput).datepicker({
                    dateFormat: 'dd/mm/yy',
                    defaultDate: Date.now,
                });
            };

            // gets called once when grid ready to insert the element
            Datepicker.prototype.getGui = function () {
                return this.eInput;
            };

            // focus and select can be done after the gui is attached
            Datepicker.prototype.afterGuiAttached = function () {
                this.eInput.focus();
                this.eInput.select();
            };

            // returns the new value after editing
            Datepicker.prototype.getValue = function () {
                return this.eInput.value;
            };

            // any cleanup we need to be done here
            D");
                WriteLiteral(@"atepicker.prototype.destroy = function () {
                // but this example is simple, no cleanup, we could
                // even leave this method out as it's optional
            };

            // if true, then this editor will appear in a popup
            Datepicker.prototype.isPopup = function () {
                // and we could leave this method out also, false is the default
                return false;
            };

            return Datepicker;
        }

        function onCellValueChanged(event) {
            console.log(
                'onCellValueChanged: ' + event.colDef.field + ' = ' + event.newValue
            );
        }

        function onRowValueChanged(event) {
            var data = event.data;
            console.log(
                'onRowValueChanged: (' +
                data.asunto +
                ', ' +
                data.fecha +
                ', ' +
                data.descripcion +
                ', ' +
                data.id");
                WriteLiteral(@"
                +
                ')'
            );
        }

        var leftGridOptionsEquipos = {
            columnDefs: leftColumnsDefsEquipos,
            suppressDragLeaveHidesColumns: true,
            suppressMakeColumnVisibleAfterUnGroup: true,
            rowGroupPanelShow: 'always',
            debug: false,
            rowSelection: 'single',
            rowGroupPanelShow: 'always',
            pivotPanelShow: 'always',
            enableRangeSelection: true,
            enableMultiRowDragging: true,
            getRowNodeId: function (data) { return data.Id; },
            rowDragManaged: true,
            suppressMoveWhenRowDragging: true,
            columnDefs: leftColumnsDefsEquipos,
            animateRows: true,
            pagination: true,
            paginationPageSize: 10,
            localeText: AG_GRID_LOCALE_EN
        };

        var leftGridOptionArl = {
            rowSelection: 'single',
            columnDefs: leftColumnsDefsArl,
            loca");
                WriteLiteral(@"leText: AG_GRID_LOCALE_EN
            };

        var leftGridOptionsVehiculos = {
            columnDefs: leftColumnsDefsVehiculos,
            suppressDragLeaveHidesColumns: true,
            suppressMakeColumnVisibleAfterUnGroup: true,
            rowGroupPanelShow: 'always',
            debug: false,
            rowSelection: 'single',
            rowGroupPanelShow: 'always',
            pivotPanelShow: 'always',
            enableRangeSelection: true,
            enableMultiRowDragging: true,
            getRowNodeId: function (data) { return data.Id; },
            rowDragManaged: true,
            suppressMoveWhenRowDragging: true,
            columnDefs: leftColumnsDefsVehiculos,
            animateRows: true,
            pagination: true,
            paginationPageSize: 10,
            localeText: AG_GRID_LOCALE_EN
        };

        var AG_GRID_LOCALE_EN = {
            // Set Filter
            selectAll: '(Seleccionar todo)',
            selectAllSearchResults: '(Selecc");
                WriteLiteral(@"ionar todos los resultados de la búsqueda)',
            searchOoo: 'Buscar...',
            blanks: '(Espacios en blanco)',
            noMatches: 'No hay coincidencias',

            // Number Filter & Text Filter
            filterOoo: 'Filter...',
            equals: 'Equals',
            notEqual: 'Not equal',
            empty: 'Choose One',

            // Number Filter
            lessThan: 'Less than',
            greaterThan: 'Greater than',
            lessThanOrEqual: 'Less than or equal',
            greaterThanOrEqual: 'Greater than or equal',
            inRange: 'In range',
            inRangeStart: 'to',
            inRangeEnd: 'from',

            // Text Filter
            contains: 'Contiene',
            notContains: 'Not contains',
            startsWith: 'Starts with',
            endsWith: 'Ends with',

            // Date Filter
            dateFormatOoo: 'yyyy-mm-dd',

            // Filter Conditions
            andCondition: 'Y',
            orConditi");
                WriteLiteral(@"on: 'O',

            // Filter Buttons
            applyFilter: 'Apply',
            resetFilter: 'Reset',
            clearFilter: 'Clear',
            cancelFilter: 'Cancel',

            // Filter Titles
            textFilter: 'Text Filter',
            numberFilter: 'Number Filter',
            dateFilter: 'Date Filter',
            setFilter: 'Set Filter',

            // Side Bar
            columns: 'Columns',
            filters: 'Filters',

            // columns tool panel
            pivotMode: 'Pivot Mode',
            groups: 'Row Groups',
            rowGroupColumnsEmptyMessage: 'Arrastre aquí para establecer grupos de filas',
            values: 'Values',
            valueColumnsEmptyMessage: 'Drag here to aggregate',
            pivots: 'Column Labels',
            pivotColumnsEmptyMessage: 'Drag here to set column labels',

            // Header of the Default Group Column
            group: 'Grupo',

            // Other
            loadingOoo: 'Loading...',");
                WriteLiteral(@"
            noRowsToShow: 'No hay datos para mostrar',
            enabled: 'Enabled',

            // Menu
            pinColumn: 'Pin Column',
            pinLeft: 'Pin Left',
            pinRight: 'Pin Right',
            noPin: 'No Pin',
            valueAggregation: 'Value Aggregation',
            autosizeThiscolumn: 'Ajustar tamaño de esta columna',
            autosizeAllColumns: 'Ajustar tamaño de todas las columnas',
            groupBy: 'Agrupar por',
            ungroupBy: 'Desagrupar por',
            resetColumns: 'Restablecer columnas',
            expandAll: 'Expand All',
            collapseAll: 'Close All',
            copy: 'Copiar',
            ctrlC: 'Ctrl+C',
            copyWithHeaders: 'Copiar con encabezado',
            paste: 'Paste',
            ctrlV: 'Ctrl+V',
            export: 'Exportar',
            csvExport: 'CSV Exportar',
            excelExport: 'Excel Export (.xlsx)',
            excelXmlExport: 'Excel Export (.xml)',

            // Enterpris");
                WriteLiteral(@"e Menu Aggregation and Status Bar
            sum: 'Sum',
            min: 'Min',
            max: 'Max',
            none: 'None',
            count: 'Count',
            avg: 'Average',
            filteredRows: 'Filtered',
            selectedRows: 'Selected',
            totalRows: 'Total Rows',
            totalAndFilteredRows: 'Rows',
            more: 'More',
            to: 'to',
            of: 'of',
            page: 'Page',
            nextPage: 'Next Page',
            lastPage: 'Last Page',
            firstPage: 'First Page',
            previousPage: 'Previous Page',

            // Enterprise Menu (Charts)
            pivotChartAndPivotMode: 'Pivot Chart & Pivot Mode',
            pivotChart: 'Pivot Chart',
            chartRange: 'Chart Range',

            columnChart: 'Column',
            groupedColumn: 'Grouped',
            stackedColumn: 'Stacked',
            normalizedColumn: '100% Stacked',

            barChart: 'Bar',
            groupedBar: 'Grouped'");
                WriteLiteral(@",
            stackedBar: 'Stacked',
            normalizedBar: '100% Stacked',

            pieChart: 'Pie',
            pie: 'Pie',
            doughnut: 'Doughnut',

            line: 'Line',

            xyChart: 'X Y (Scatter)',
            scatter: 'Scatter',
            bubble: 'Bubble',

            areaChart: 'Area',
            area: 'Area',
            stackedArea: 'Stacked',
            normalizedArea: '100% Stacked',

            histogramChart: 'Histogram',

            // Charts
            pivotChartTitle: 'Pivot Chart',
            rangeChartTitle: 'Range Chart',
            settings: 'Settings',
            data: 'Data',
            format: 'Format',
            categories: 'Categories',
            defaultCategory: '(None)',
            series: 'Series',
            xyValues: 'X Y Values',
            paired: 'Paired Mode',
            axis: 'Axis',
            navigator: 'Navigator',
            color: 'Color',
            thickness: 'Thickness',
       ");
                WriteLiteral(@"     xType: 'X Type',
            automatic: 'Automatic',
            category: 'Category',
            number: 'Number',
            time: 'Time',
            xRotation: 'X Rotation',
            yRotation: 'Y Rotation',
            ticks: 'Ticks',
            width: 'Width',
            height: 'Height',
            length: 'Length',
            padding: 'Padding',
            spacing: 'Spacing',
            chart: 'Chart',
            title: 'Title',
            titlePlaceholder: 'Chart title - double click to edit',
            background: 'Background',
            font: 'Font',
            top: 'Top',
            right: 'Right',
            bottom: 'Bottom',
            left: 'Left',
            labels: 'Labels',
            size: 'Size',
            minSize: 'Minimum Size',
            maxSize: 'Maximum Size',
            legend: 'Legend',
            position: 'Position',
            markerSize: 'Marker Size',
            markerStroke: 'Marker Stroke',
            markerPa");
                WriteLiteral(@"dding: 'Marker Padding',
            itemSpacing: 'Item Spacing',
            itemPaddingX: 'Item Padding X',
            itemPaddingY: 'Item Padding Y',
            layoutHorizontalSpacing: 'Horizontal Spacing',
            layoutVerticalSpacing: 'Vertical Spacing',
            strokeWidth: 'Stroke Width',
            offset: 'Offset',
            offsets: 'Offsets',
            tooltips: 'Tooltips',
            callout: 'Callout',
            markers: 'Markers',
            shadow: 'Shadow',
            blur: 'Blur',
            xOffset: 'X Offset',
            yOffset: 'Y Offset',
            lineWidth: 'Line Width',
            normal: 'Normal',
            bold: 'Bold',
            italic: 'Italic',
            boldItalic: 'Bold Italic',
            predefined: 'Predefined',
            fillOpacity: 'Fill Opacity',
            strokeOpacity: 'Line Opacity',
            histogramBinCount: 'Bin count',
            columnGroup: 'Column',
            barGroup: 'Bar',
            pi");
                WriteLiteral(@"eGroup: 'Pie',
            lineGroup: 'Line',
            scatterGroup: 'X Y (Scatter)',
            areaGroup: 'Area',
            histogramGroup: 'Histogram',
            groupedColumnTooltip: 'Grouped',
            stackedColumnTooltip: 'Stacked',
            normalizedColumnTooltip: '100% Stacked',
            groupedBarTooltip: 'Grouped',
            stackedBarTooltip: 'Stacked',
            normalizedBarTooltip: '100% Stacked',
            pieTooltip: 'Pie',
            doughnutTooltip: 'Doughnut',
            lineTooltip: 'Line',
            groupedAreaTooltip: 'Area',
            stackedAreaTooltip: 'Stacked',
            normalizedAreaTooltip: '100% Stacked',
            scatterTooltip: 'Scatter',
            bubbleTooltip: 'Bubble',
            histogramTooltip: 'Histogram',
            noDataToChart: 'No data available to be charted.',
            pivotChartRequiresPivotMode: 'Pivot Chart requires Pivot Mode enabled.'
        }

        var leftGridOptions = {
            c");
                WriteLiteral(@"olumnDefs: leftColumnDefs,
            defaultColDef: {
                flex: 1,
                minWidth: 100,
                filter: true
            },
            autoGroupColumnDef: {
                minWidth: 200,
            },
            suppressDragLeaveHidesColumns: true,
            suppressMakeColumnVisibleAfterUnGroup: true,
            rowGroupPanelShow: 'always',
            debug: false,
            rowSelection: 'single',
            rowGroupPanelShow: 'always',
            pivotPanelShow: 'always',
            enableRangeSelection: true,
            enableMultiRowDragging: true,
            getRowNodeId: function (data) { return data.Id; },
            rowDragManaged: true,
            suppressMoveWhenRowDragging: true,
            columnDefs: leftColumnDefs,
            animateRows: true,
            pagination: true,
            paginationPageSize: 10,
            localeText: AG_GRID_LOCALE_EN,
            onSelectionChanged: onSelectionChanged
        };

  ");
                WriteLiteral(@"      var leftGridOptionsCont = {
            columnDefs: leftColumnDefsCont,
            defaultColDef: {
                flex: 1,
                minWidth: 100,
                filter: true
            },
            autoGroupColumnDef: {
                minWidth: 200,
            },
            pagination: true,
            paginationPageSize: 10,
            localeText: AG_GRID_LOCALE_EN
        };

        var leftGridOptionsProv = {
            columnDefs: leftColumnDefsProv,
            defaultColDef: {
                flex: 1,
                minWidth: 100,
                filter: true
            },
            autoGroupColumnDef: {
                minWidth: 200,
            },
            pagination: true,
            paginationPageSize: 10,
            localeText: AG_GRID_LOCALE_EN
        };

        var leftGridOptionsVis = {
            columnDefs: leftColumnDefsVis,
            defaultColDef: {
                flex: 1,
                minWidth: 100,
          ");
                WriteLiteral(@"      filter: true
            },
            autoGroupColumnDef: {
                minWidth: 200,
            },
            animateRows: true,
            pagination: true,
            paginationPageSize: 10,
            localeText: AG_GRID_LOCALE_EN,
        };

        function onQuickFilterChanged() {
            leftGridOptions.api.setQuickFilter(document.getElementById('quickFilter').value);
        }

        function eliminar() {
            var swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: ""btn btn-primary"",
                    cancelButton: ""btn btn-danger mr-2""
                },
                buttonsStyling: false
            });
            swalWithBootstrapButtons
                .fire({
                    title: ""Está seguro?"",
                    text: ""No podrá revertir esto!"",
                    type: ""warning"",
                    showCancelButton: true,
                    confirmButtonText: ""Sí, ");
                WriteLiteral(@"Eliminar!"",
                    cancelButtonText: ""No, Cancelar!"",
                    reverseButtons: true
                })
                .then(function (result) {
                    if (result.value) {
                        var selectedRows = leftGridOptions.api.getSelectedRows();
                        var IdVisi = selectedRows.length === 1 ? selectedRows[0].Id : '';
                        $.ajax({
                            url: 'Visitantes/DeleteInfo',
                            data: { jsonobtj: JSON.stringify(IdVisi) },
                            type: ""POST"",
                            success: function (data) {
                                debugger;
                                if (data == true) {
                                    swalWithBootstrapButtons.fire(
                                        ""Eliminado!"",
                                        ""El registro fué eliminado."",
                                        ""success""
                             ");
                WriteLiteral(@"       );
                                    alertSuccess();
                                    totastSucces();
                                    location.reload();
                                } else {
                                    toastEror();
                                    location.reload();
                                }
                            },
                            error: function (data) {

                            }
                        });

                    } else if (
                        // Read more about handling dismissals
                        result.dismiss === Swal.DismissReason.cancel
                    ) {
                        swalWithBootstrapButtons.fire(
                            ""Cancelado"",
                            ""El registro sigue a salvo :)"",
                            ""error""
                        );
                    }
                });
        }

        function totastSucces() {
          ");
                WriteLiteral(@"  Command: toastr[""success""](""Hecho con exito!"", ""Exitoso"")

            toastr.options = {
                ""closeButton"": true,
                ""debug"": false,
                ""newestOnTop"": false,
                ""progressBar"": true,
                ""positionClass"": ""toast-top-right"",
                ""preventDuplicates"": false,
                ""showDuration"": 3000,
                ""hideDuration"": 1000,
                ""timeOut"": 10000,
                ""extendedTimeOut"": 10000,
                ""showEasing"": ""swing"",
                ""hideEasing"": ""linear"",
                ""showMethod"": ""fadeIn"",
                ""hideMethod"": ""fadeOut""
            }
        }

        function toastEror() {
            Command: toastr[""error""](""Opss!!, algo salió mal, por favor intente de nuevo"", ""Error"")

            toastr.options = {
                ""closeButton"": true,
                ""debug"": false,
                ""newestOnTop"": false,
                ""progressBar"": true,
                ""posi");
                WriteLiteral(@"tionClass"": ""toast-top-right"",
                ""preventDuplicates"": false,
                ""showDuration"": 3000,
                ""hideDuration"": 1000,
                ""timeOut"": 10000,
                ""extendedTimeOut"": 10000,
                ""showEasing"": ""swing"",
                ""hideEasing"": ""linear"",
                ""showMethod"": ""fadeIn"",
                ""hideMethod"": ""fadeOut""
            }
        }

        function accessState(data) {
            alertSuccess();
            var obj = {};
                obj['State'] = data;
            var selectedRows = leftGridOptions.api.getSelectedRows();
            var IdVisi = selectedRows.length === 1 ? selectedRows[0].Id : '';
            let ide = selectedRows.length === 1 ? selectedRows[0].Identificacion : '';
            obj['UserId'] = IdVisi;
            obj['Id'] = ide;
            $.ajax({
                url: 'Visitantes/AccessState',
                data: { jsonobtj: JSON.stringify(obj) },
                type: ""POST"",
    ");
                WriteLiteral(@"            success: function (data) {
                    if (data == true) {
                        totastSucces();
                        location.reload();
                    } else {
                        toastEror();
                        location.reload();
                    }
                },
                error: function (data) {

                }
            });
        }

        function onSelectionIncChange() {
            var selectedRows = leftGridOptions.api.getSelectedRows();
        }

        function saveIncEdit() {
            debugger;
            const node = this.printNode;
            if (true) {

            }
        }

        function onSelectionChanged() {
            alertSuccess();
            document.getElementById(""deleteEvent"").disabled = false;
            document.getElementById(""addSe"").disabled = false;
            document.getElementById(""editVissi"").disabled = false;
            var selectedRows = leftGridOptions.api.getSel");
                WriteLiteral(@"ectedRows();
            var IdVisi = selectedRows.length === 1 ? selectedRows[0].Id : '';
            $.ajax({
                url: 'Visitantes/GetInfo',
                data: { jsonobtj: JSON.stringify(IdVisi) },
                type: ""POST"",
                success: function (data) {
                    if (data.id > 0) {
                        var x = document.getElementById(""DivVis"");
                        if (x.style.display === ""none"") {
                            x.style.display = ""block"";
                        }
                        var Incidentes = data.incidentes;
                        var Equipos = data.equipos;
                        var Vehiculos = data.vehiculos;
                        var Arl = data.arl;
                        loadGridIncidentes(leftGridOptionsIncidentes, 'Left', Incidentes);
                        loadGridEquipos(leftGridOptionsEquipos, 'Left', Equipos);
                        loadGridVehiculos(leftGridOptionsVehiculos, 'Left', Vehiculos);
 ");
                WriteLiteral(@"                       loadGridArl(leftGridOptionArl, 'Left', Arl);
                        document.getElementById(""js-contacts"").style.display = ""inline"";
                        document.getElementById(""names"").innerHTML = data.nombres + ' ' + data.apellidos;
                        document.getElementById(""company"").innerHTML = data.empresa;
                        document.getElementById(""profesionVis"").innerHTML = data.profesion;
                        document.getElementById(""idV"").innerHTML = data.identificacion;
                        document.getElementById(""typeDoco"").innerHTML = data.tipoDoc;
                        document.getElementById(""typeVi"").innerHTML = data.tipoVisitante;
                        document.getElementById(""rhh"").innerHTML = data.rh;
                        document.getElementById(""gen"").innerHTML = data.genero;
                        document.getElementById(""email"").innerHTML = data.correo;
                        document.getElementById(""fExpedicionDoc"").inner");
                WriteLiteral(@"HTML = data.fExpedicionDoc;
                        document.getElementById(""empleadoRespon"").innerHTML = data.idEmpleadoResponsable;
                        document.getElementById(""detalleVis"").innerHTML = data.detalle;
                        document.getElementById(""fotoVis"").setAttribute('src','data:image/png;base64,' + data.foto + '');
                        document.getElementById(""avatarImg"").setAttribute('src','data:image/png;base64,' + data.foto + '');
                        document.getElementById(""firmaVis"").setAttribute('src','data:image/png;base64,' + data.firma + '');
                        document.getElementById(""imgage"").setAttribute('src','data:image/png;base64,' + data.foto + '');
                        } else {

                        }
                },
                error: function (data) {

                }
            });
        }

        function loadGridIncidentes(options, side, data) {
            var gridIncidentes = document.querySelector('#gridIncide");
                WriteLiteral(@"ntes');

            if (options && options.api) {
                options.api.destroy();
            }
            options.rowData = data;
            new agGrid.Grid(gridIncidentes, options);
        }

        function loadGridEquipos(options, side, data) {
            var gridEquipos = document.querySelector('#gridEquipos');

            if (options && options.api) {
                options.api.destroy();
            }

            options.rowData = data;
            new agGrid.Grid(gridEquipos, options);
            }

        function loadGridArl(options, side, data) {
            var gridArl = document.querySelector('#gridArl');

            if (options && options.api) {
                options.api.destroy();
            }

            options.rowData = data;
            new agGrid.Grid(gridArl, options);
        }

        function loadGridVehiculos(options, side, data) {
            var gridVehiculos = document.querySelector('#gridVehiculos');

            if (option");
                WriteLiteral(@"s && options.api) {
                options.api.destroy();
            }

            options.rowData = data;
            new agGrid.Grid(gridVehiculos, options);
        }

        function loadGrid(options, side, data) {
            var grid = document.querySelector('#myGrid');

            if (options && options.api) {
                options.api.destroy();
            }
            options.rowData = data;
            new agGrid.Grid(grid, options);
        }

        function loadGridVis(options, side, data) {
            var grid = document.querySelector('#gridVisEnter');

            if (options && options.api) {
                options.api.destroy();
            }
            options.rowData = data;
            new agGrid.Grid(grid, options);
        }

        function loadGridCont(options, side, data) {
            var grid = document.querySelector('#gridContEnter');

            if (options && options.api) {
                options.api.destroy();
            }
     ");
                WriteLiteral(@"       options.rowData = data;
            new agGrid.Grid(grid, options);
        }

        function loadGridProv(options, side, data) {
            var grid = document.querySelector('#gridProvEnter');

            if (options && options.api) {
                options.api.destroy();
            }
            options.rowData = data;
            new agGrid.Grid(grid, options);
        }

        var ListaVisitors = ");
#nullable restore
#line 2215 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
                       Write(Html.Raw(JsonConvert.SerializeObject(Model)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var ListaVis = ");
#nullable restore
#line 2216 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
                  Write(Html.Raw(JsonConvert.SerializeObject(Model.Where(s => s.EstadoAcceso == true && s.TipoVisitante == "VISITANTE"))));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var ListaCont = ");
#nullable restore
#line 2217 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
                   Write(Html.Raw(JsonConvert.SerializeObject(Model.Where(s => s.EstadoAcceso == true && s.TipoVisitante == "CONTRATISTA"))));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n        var ListaProv = ");
#nullable restore
#line 2218 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
                   Write(Html.Raw(JsonConvert.SerializeObject(Model.Where(s => s.EstadoAcceso == true && s.TipoVisitante == "PROVEEDOR"))));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";

        function loadGrids() {
            loadGrid(leftGridOptions, 'Left', ListaVisitors);
            loadGridVis(leftGridOptionsVis, 'Left', ListaVis);
            loadGridCont(leftGridOptionsCont, 'Left', ListaCont);
            loadGridProv(leftGridOptionsProv, 'Left', ListaProv);
            ListaVisitors.forEach(function (valor, indice, array) {

                var countVis = 0;
                for (var i = 0; i < array.length; ++i) {
                    if (array[i].TipoVisitante == ""VISITANTE"" && array[i].EstadoAcceso == 1)
                        countVis++;
                }

                var countProv = 0;
                for (var i = 0; i < array.length; ++i) {
                    if (array[i].TipoVisitante == ""PROVEEDOR"" && array[i].EstadoAcceso == 1)
                        countProv++;
                }

                var countCont = 0;
                for (var i = 0; i < array.length; ++i) {
                    if (array[i].TipoVisitante == ""CONTRATISTA"" && ar");
                WriteLiteral(@"ray[i].EstadoAcceso == 1)
                        countCont++;
                }

                if (countVis != 0 || countProv != 0 || countCont != 0) {
                    document.getElementById(""countVisitors"").innerHTML = countVis;
                    document.getElementById(""countProviders"").innerHTML = countProv;
                    document.getElementById(""countContratist"").innerHTML = countCont;
                    document.getElementById(""countTotal"").innerHTML = countVis + countProv + countCont;
                }
                else {
                    document.getElementById(""countVisitors"").innerHTML = 0;
                    document.getElementById(""countProviders"").innerHTML = 0;
                    document.getElementById(""countContratist"").innerHTML = 0;
                    document.getElementById(""countTotal"").innerHTML = countVis + countProv + countCont;
                }

            });
        }

        var controls = {
			leftArrow: '<i class=""");
#nullable restore
#line 2262 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
                              Write(Settings.Theme.IconPrefix);

#line default
#line hidden
#nullable disable
                WriteLiteral(" fa-angle-left\" style=\"font-size: 1.25rem\"></i>\',\r\n\t\t\trightArrow: \'<i class=\"");
#nullable restore
#line 2263 "C:\Users\Maico\OneDrive\Documentos\GitHub\ApiControl\WebControlAcceso.WEB\Views\Visitantes\Index.cshtml"
                               Write(Settings.Theme.IconPrefix);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" fa-angle-right"" style=""font-size: 1.25rem""></i>'
		}

        var runDatePicker = function () {
            // range picker
            $('#datepicker-5').datepicker({
                todayHighlight: true,
                templates: controls
            });
        }

        function alertSuccess() {
            var dialog = bootbox.dialog({
                message: '<p class=""text-center mb-0""><i class=""fa fa-spin fa-cog""></i> Cargando, un momento por favor...</p>',
                centerVertical: true,
                closeButton: false
            });
            // do something in the background
            dialog.init(function () {
                setTimeout(function () {
                    dialog.modal('hide');
                }, 2000);
            });
        }

        $(document).ready(function () {
            runDatePicker();
            loadGrids();
            startTime();
            $(""body"").attr(""onload"", ""wizardEventController.body_onload()"");
            var");
                WriteLiteral(@" today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0');
            var yyyy = today.getFullYear();
            today = yyyy + '-' + mm + '-' + dd;
            document.getElementById('dateExpeditionVisitor').defaultValue = today ;
            $.getJSON(""variables/WacomVariables.json"", function (datos) {
                localStorage.setItem(""WACOMVARIABLES"", JSON.stringify(datos));
            });

            $('input[type=radio][name=contactview]').change(function () {
                if (this.value == 'grid') {
                    $('#js-contacts .card').removeClassPrefix('mb-').addClass('mb-g');
                    $('#js-contacts .col-xl-12').removeClassPrefix('col-xl-').addClass('col-xl-4');
                    $('#js-contacts .js-expand-btn').addClass('d-none');
                    $('#js-contacts .card-body + .card-body').addClass('show');
                } else if (this.value == 'table') {");
                WriteLiteral(@"
                    $('#js-contacts .card').removeClassPrefix('mb-').addClass('mb-1');
                    $('#js-contacts .col-xl-4').removeClassPrefix('col-xl-').addClass('col-xl-12');
                    $('#js-contacts .js-expand-btn').removeClass('d-none');
                    $('#js-contacts .card-body + .card-body').removeClass('show');
                }
            });
        });

        $('#defaultIndeterminate').prop('indeterminate', true)

        var toggleCheckbox = function () {
            $('#js-checkbox-toggle').toggleText('Change to CIRCLE', 'Change back to default');
            $('.frame-wrap .custom-checkbox').toggleClass('custom-checkbox-circle');
        }

        var toggleRadio = function () {
            $('#js-radio-toggle').toggleText('Change to ROUNDED', 'Change back to default');
            $('.frame-wrap .custom-radio').toggleClass('custom-radio-rounded');
        }

        function capture() {
            if (!wgssSignatureSDK.running || null == dynCa");
                WriteLiteral(@"pt) {
                print(""Session error. Restarting the session."");
                actionWhenRestarted(window.Capture);   // See SigCaptX-SessionControl.js
                return;
            }
            dynCapt.Capture(sigCtl, ""John Smith"", ""Document Approval"", null, null, onDynCaptCapture);
        }

        function onDynCaptCapture(dynCaptV, SigObjV, status) {
                b64Firma = SigObjV;
                if (wgssSignatureSDK.ResponseStatus.INVALID_SESSION == status) {
                    print(""Error: invalid session. Restarting the session."");
                    actionWhenRestarted(window.Capture);  // See SigCaptX-SessionControl.js
                }
                else {
                    /* Check the status returned from the signature capture */
                    switch (status) {
                        case wgssSignatureSDK.DynamicCaptureResult.DynCaptOK:
                            sigObj = SigObjV;
                            print(""Signature captured successf");
                WriteLiteral(@"ully"");

                            /* Set the RenderBitmap flags as appropriate depending on whether the user wants to use a picture image or B64 text value */
                            if (document.getElementById(""chkUseB64Image"").checked) {
                                var flags = wgssSignatureSDK.RBFlags.RenderOutputBase64 | wgssSignatureSDK.RBFlags.RenderColor32BPP;
                            }
                            else {
                                var flags = wgssSignatureSDK.RBFlags.RenderOutputPicture | wgssSignatureSDK.RBFlags.RenderColor32BPP;
                            }
                            sigObj.RenderBitmap(""bmp"", imageBox.clientWidth, imageBox.clientHeight, 0.7, 0x00000000, 0x00FFFFFF, flags, 4, 4, onRenderBitmap);
                            break;

                        case wgssSignatureSDK.DynamicCaptureResult.DynCaptCancel:
                            print(""Signature capture cancelled"");
                            break;

                    ");
                WriteLiteral(@"    case wgssSignatureSDK.DynamicCaptureResult.DynCaptPadError:
                            print(""No capture service available"");
                            break;

                        case wgssSignatureSDK.DynamicCaptureResult.DynCaptError:
                            print(""Tablet Error"");
                            break;

                        case wgssSignatureSDK.DynamicCaptureResult.DynCaptNotLicensed:
                            print(""No valid Signature Capture licence found"");
                            break;

                        default:
                            print(""Capture Error "" + status);
                            break;
                    }
                }
            }

        function onRenderBitmap(sigObjV, bmpObj, status) {
                if (wgssSignatureSDK.ResponseStatus.OK == status) {
                    var imageBox = document.getElementById(""imageBox"");
                    var useB64Image = document.getElementById(""chkUseB64Image"").c");
                WriteLiteral(@"hecked;

                    /* If the user wants to demonstrate the use of B64 image strings then define an image and set its source to the B64 string*/
                    if (useB64Image) {
                        print(""base64_image:>"" + bmpObj + ""<"");
                        img = new Image();
                        img.src = ""data:image/png;base64,"" + bmpObj;
                        b64Firma = bmpObj;
                        img.id = ""firmaImg"";

                        if (null == imageBox.firstChild) {
                            imageBox.appendChild(img);
                        }
                        else {
                            imageBox.replaceChild(img, imageBox.firstChild);
                        }
                    }
                    else {
                        /* If RenderBitmap generated a standard image (picture) then just place that picture in the img control on the HTML form */
                        if (null == imageBox.firstChild) {
                ");
                WriteLiteral(@"            imageBox.appendChild(bmpObj.image);
                        }
                        else {
                            imageBox.replaceChild(bmpObj.image, imageBox.firstChild);
                        }
                    }
                    /* If the user chose the option to show the SigText value on the form then call the function to do this */
                    if (document.getElementById(""chkShowSigText"").checked) {
                        sigObjV.GetSigText(onGetSigText);
                    }
                }
                else {
                    print(""Signature Render Bitmap error: "" + status);
                }
            }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SmartSettings Settings { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<WebControlAcceso.MODELS.Dtos.VisitanteDto>> Html { get; private set; }
    }
}
#pragma warning restore 1591
